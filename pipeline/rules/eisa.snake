import os

rule eisa_prep:
    """ 
    Generate intron/exon reference using eisaR
    """
    input:
        gtf = TRANSCRIPTS,
        fa = GENOME, 
    output:
        os.path.join(DBASES, "eisa.fa"),
        os.path.join(DBASES, "eisa", "eisa.fa"),
        os.path.join(DBASES, "eisa", "eisaR.gtf"),
    params:
      outdir = os.path.join(DBASES),
      r = os.path.join(RSRC, "eisa.R"),
    log:
      os.path.join(DBASES, "logs", "eisa", "prep.txt")
    message:
      "generating eisa reference "
    threads: 1
    resources: 
        all_threads=1,
        mem_mb=MEM_ALLOC["DEFAULT"]
    shell:
      """
      Rscript --vanilla {params.r} {input.gtf} {input.fa} {params.outdir}
      """

def _get_t0_libs(wildcards):

    strands = CMD_CONFIG['stranded']
    bw_strands = []

    if strands == "forward":
        bw_strands.append("fwd")
    elif strands == "reverse":
        bw_strands.append("fwd")
    else:
        bw_strands.append("fwd")
        bw_strands.append("rev")

    out = expand(path.join(DATA, 
        "bigwigs",  
        "bt2", 
        FASTA_TYPE,
        "{sample}_{strand}.bw"), 
        sample = T0_SAMPLES,
        strand = bw_strands)
    return out

rule eisa_mask:
    """ 
    Generate masked intron/exon reference using eisaR
    """
    input:
      bws = _get_t0_libs,
      fa = os.path.join(DBASES, "eisa", "eisa.fa"),
      gtf = os.path.join(DBASES,  "eisa", "eisaR.gtf"),
    output:
      bed = os.path.join(DBASES,  "intron_mask",
              "intron_mask_txcoords_{fasta}_bt2_align.bed"),
      fa = os.path.join(DBASES,  "{fasta}_masked.fa")
    params:
      eisadir = os.path.join(DBASES,  "eisa"),
      outdir = DBASES,
      r = os.path.join(RSRC, "mask_introns.R"),
    log:
      os.path.join(DBASES, "logs", "eisa", "{fasta}_mask.txt")
    message:
      "generating eisa reference with intron coverage masked "
    threads: 1
    resources: 
        all_threads=1,
        mem_mb=MEM_ALLOC["SALMON"]
    shell:
      """
      Rscript --vanilla \
              {params.r} \
              {params.eisadir} \
              {params.outdir} \
              {input.bws} 
      """
